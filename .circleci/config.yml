version: 2.1

orbs:
  gh: circleci/github-cli@2.2.0

commands:
  configure-path:
    description: Add audius binaries to PATH
    steps:
      - run:
          name: Add audius binaries to PATH
          command: |
            echo 'export PATH=~/audius-d/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
  standup-node:
    description: 'Stand up an audius node of the provided type'
    parameters:
      nodetype:
        type: string
    steps:
      - run:
          name: standup audius node
          command: |
            cd ~/audius-d
            mkdir ~/.audius
            cp ~/audius-d/sample.audius.conf "$HOME/.audius/<< parameters.nodetype >>.conf"
            audius-d-x86 -c "$HOME/.audius/<< parameters.nodetype >>.conf" -network=stage -node '<< parameters.nodetype >>'
  basic-health-check:
    description: 'Perform a basic health check on an audius node'
    parameters:
      port:
        type: integer
        default: 80
      jqkey:
        type: string
        default: '.data.healthy'
    steps:
      - run:
          name: 'Basic health check'
          command: |
            timeout=0
            while [[ "$(curl -Lsko /dev/null -w "%{http_code}" http://localhost:<< parameters.port >>/health_check)" =~ 502|000 ]] && [ "$timeout" -lt 60 ]; do
              sleep 3
              ((timeout=timeout+3))
              echo "Waiting for server to start... $timeout"
            done
            cresult="$(curl -Lkv http://localhost:<< parameters.port >>/health_check | jq '<< parameters.jqkey >>')"
            echo $cresult
            [ "$cresult" = true ] || [ "$cresult" = false ]



jobs:
  build-job:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - run:
          name: install go
          command: |
            sudo apt-get update
            sudo apt-get install -y golang
      - run:
          name: audius-docker-compose
          command: |
            cd ~/audius-d

            REPO_OWNER="AudiusProject"
            REPO_NAME="audius-docker-compose"
            BRANCH_NAME="stage"
            COMPOSE_COMMIT_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/branches/$BRANCH_NAME" | \
              jq -r '.commit.sha')
            DOCKER_IMAGE="audius/audius-docker-compose:$COMPOSE_COMMIT_SHA"

            echo "export COMPOSE_COMMIT_SHA=$COMPOSE_COMMIT_SHA" >> $BASH_ENV

            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            
            if docker buildx imagetools inspect $DOCKER_IMAGE >/dev/null 2>&1; then
              echo "Docker image $DOCKER_IMAGE already exists. Skipping build."
            else
              echo "Docker image $DOCKER_IMAGE not found. Building and pushing..."
              docker buildx create --use
              make build-push TAG=$COMPOSE_COMMIT_SHA
              make build-push TAG=latest
            fi
      - run:
          name: make
          command: |
            cd ~/audius-d
            make TAG=$COMPOSE_COMMIT_SHA
      - persist_to_workspace:
          root: ~/audius-d
          paths:
            - bin/audius-d-arm
            - bin/audius-d-x86


  test-creator-node:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - configure-path
      - standup-node:
          nodetype: 'creator-node'
      - basic-health-check
          
  test-discovery-provider:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - configure-path
      - standup-node:
          nodetype: 'discovery-provider'
      - basic-health-check:
          port: 5000
          jqkey: '.data.discovery_provider_healthy'

  test-identity-service:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - configure-path
      - standup-node:
          nodetype: 'identity-service'
      - basic-health-check:
          port: 7000
          jqkey: '.healthy'

  test-devnet-deps:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - configure-path
      - run: 
          name: standup devnet dependencies
          command: |
            cd ~/audius-d
            audius-d-x86 devnet
      - run:
          name: acdc-ganache
          command: |
            curl -sf -X POST --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' http://localhost:8545
      - run:
          name: mainnet-ganache
          command: |
            curl -sf -X POST --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' http://localhost:8546
      - run:
          name: mainnet-solana
          command: |
            curl http://localhost:8899 -X POST -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","id":1,"method":"getFirstAvailableBlock"}'
      - run:
          name: tear down devnet dependencies
          command: |
            cd ~/audius-d
            audius-d-x86 down


  publish-job:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - gh/setup:
          version: 2.23.0
      - add_ssh_keys:
          fingerprints:
            - "7a:85:bb:bf:30:0e:99:c9:d5:ba:9e:a5:05:c8:cf:12"
      - run:
          name: git config
          command: |
            git config --global user.email "audius-infra@audius.co"
            git config --global user.name "audius-infra"
      - attach_workspace:
          at: ~/audius-d
      - run:
          name: commit go binaries
          command: |
            cd ~/audius-d
            git checkout -b bin origin/bin
            git add bin/*
            git commit -m "Update golang bin $CIRCLE_SHA1" || exit 0
            git push origin bin

workflows:
  version: 2
  build-test:
    jobs:
      - build-job:
          context: github
          filters:
            branches:
              ignore:
                - main
                - bin
      - test-creator-node:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main
                - bin
      - test-discovery-provider:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main
                - bin
      - test-identity-service:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main
                - bin
      - test-devnet-deps:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main
                - bin

  build-test-publish:
    jobs:
      - build-job:
          context: github
          filters:
            branches:
              only:
                - main
      - test-creator-node:
          context: github
          requires:
            - build-job
          filters:
            branches:
              only:
                - main
      - test-discovery-provider:
          context: github
          requires:
            - build-job
          filters:
            branches:
              only:
                - main
      - test-identity-service:
          context: github
          requires:
            - build-job
          filters:
            branches:
              only:
                - main
      - test-devnet-deps:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main
                - bin
      - publish-job:
          context: github
          requires:
            - test-creator-node
            - test-discovery-provider
            - test-identity-service
          filters:
            branches:
              only:
                - main
