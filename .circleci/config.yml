version: 2.1

orbs:
  gh: circleci/github-cli@2.2.0

jobs:
  build-job:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/dot-slash-audius
      - run:
          name: install go
          command: |
            sudo apt-get update
            sudo apt-get install -y golang
      - run:
          name: audius-docker-compose
          command: |
            cd ~/dot-slash-audius

            REPO_OWNER="AudiusProject"
            REPO_NAME="audius-docker-compose"
            BRANCH_NAME="as/dot-slash-audius"
            COMPOSE_COMMIT_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/branches/$BRANCH_NAME" | \
              jq -r '.commit.sha')
            DOCKER_IMAGE="audius/audius-docker-compose:$COMPOSE_COMMIT_SHA"

            echo "export COMPOSE_COMMIT_SHA=$COMPOSE_COMMIT_SHA" >> $BASH_ENV

            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            
            if docker buildx imagetools inspect $DOCKER_IMAGE >/dev/null 2>&1; then
              echo "Docker image $DOCKER_IMAGE already exists. Skipping build."
            else
              echo "Docker image $DOCKER_IMAGE not found. Building and pushing..."
              docker buildx create --use
              make build-push TAG=$COMPOSE_COMMIT_SHA
            fi
      - run:
          name: make
          command: |
            cd ~/dot-slash-audius
            make TAG=$COMPOSE_COMMIT_SHA
      - persist_to_workspace:
          root: ~/dot-slash-audius
          paths:
            - bin/audius-arm
            - bin/audius-x86


  test-creator-node:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/dot-slash-audius
      - attach_workspace:
          at: ~/dot-slash-audius
      - run:
          name: Add binaries to PATH
          command: |
            echo 'export PATH=~/dot-slash-audius/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: standup and test audius
          command: |
            cd ~/dot-slash-audius
            mkdir ~/.audius
            cp ~/dot-slash-audius/sample.audius.conf ~/.audius/creator.conf
            audius-x86 -c ~/.audius/creator.conf -network=stage
      - run:
          name: check audius node health
          command: |
            timeout=0
            while [ "$(curl -sko /dev/null -w "%{http_code}" https://localhost/health_check)" = 502 ] && [ "$timeout" -lt 60 ]; do
              sleep 3
              ((timeout=timeout+3))
              echo "Waiting for server to start... $timeout"
            done
            cresult="$(curl -Lkv https://localhost/health_check | jq '.data.healthy')"
            [ "$cresult" = true ] || [ "$cresult" = false ]

  test-discovery-provider:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/dot-slash-audius
      - attach_workspace:
          at: ~/dot-slash-audius
      - run:
          name: Add binaries to PATH
          command: |
            echo 'export PATH=~/dot-slash-audius/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: standup and test audius
          command: |
            cd ~/dot-slash-audius
            mkdir ~/.audius
            cp ~/dot-slash-audius/sample.audius.conf ~/.audius/discovery.conf
            audius-x86 -c ~/.audius/discovery.conf -network=stage
      - run:
          name: check audius node health
          command: |
            timeout=0
            while [ "$(curl -sko /dev/null -w "%{http_code}" https://localhost:5000/health_check)" = 502 ] && [ "$timeout" -lt 60 ]; do
              sleep 3
              ((timeout=timeout+3))
              echo "Waiting for server to start... $timeout"
            done
            cresult="$(curl -Lkv https://localhost:5000/health_check | jq '.data.healthy')"
            [ "$cresult" = true ] || [ "$cresult" = false ]

  publish-job:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/dot-slash-audius
      - gh/setup:
          version: 2.23.0
      - add_ssh_keys:
          fingerprints:
            - "7a:85:bb:bf:30:0e:99:c9:d5:ba:9e:a5:05:c8:cf:12"
      - run:
          name: git config
          command: |
            git config --global user.email "audius-infra@audius.co"
            git config --global user.name "audius-infra"
      - attach_workspace:
          at: ~/dot-slash-audius
      - run:
          name: commit go binaries
          command: |
            cd ~/dot-slash-audius
            git add bin/*
            git commit -m "Update golang bin $CIRCLE_SHA1"
            git push origin main

workflows:
  version: 2
  build-test:
    jobs:
      - build-job:
          context: github
          filters:
            branches:
              ignore:
                - main
      - test-creator-node:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main
      - test-discovery-provider:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main

  build-test-publish:
    jobs:
      - build-job:
          context: github
          filters:
            branches:
              only:
                - main
      - test-creator-node:
          context: github
          requires:
            - build-job
          filters:
            branches:
              only:
                - main
      - test-discovery-provider:
          context: github
          requires:
            - build-job
          filters:
            branches:
              only:
                - main
      - publish-job:
          context: github
          requires:
            - test-creator-node
            - test-discovery-provider
          filters:
            branches:
              only:
                - main
