version: 2.1

orbs:
  gh: circleci/github-cli@2.2.0

commands:
  configure-path:
    description: Add audius binaries to PATH
    steps:
      - run:
          name: Add audius binaries to PATH
          command: |
            echo 'export PATH=~/audius-d/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
  standup-devnet:
    description: 'Stand up external dev chain containers for eth, sol, and acdc'
    steps:
      - run: 
          name: standup devnet dependencies
          command: |
            cd ~/audius-d
            audius-d-x86 devnet
  basic-health-check:
    description: 'Perform a basic health check on an audius node'
    parameters:
      port:
        type: integer
        default: 80
      jqkey:
        type: string
        default: '.data.healthy'
    steps:
      - run:
          name: 'Basic health check'
          command: |
            timeout=0
            while [[ "$(curl -Lsko /dev/null -w "%{http_code}" http://localhost:<< parameters.port >>/health_check)" =~ 502|000 ]] && [ "$timeout" -lt 180 ]; do
              sleep 3
              ((timeout=timeout+3))
              echo "Waiting for server to start... $timeout"
            done
            cresult="$(curl -Lkv http://localhost:<< parameters.port >>/health_check | jq '<< parameters.jqkey >>')"
            echo $cresult
            [ "$cresult" = true ] || [ "$cresult" = false ]



jobs:
  build-job:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - run:
          name: install go
          command: |
            sudo apt-get update
            sudo apt-get install -y golang
      - run:
          name: audius-docker-compose
          command: |
            cd ~/audius-d

            REPO_OWNER="AudiusProject"
            REPO_NAME="audius-docker-compose"
            BRANCH_NAME="stage"
            COMPOSE_COMMIT_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/branches/$BRANCH_NAME" | \
              jq -r '.commit.sha')
            DOCKER_IMAGE="audius/audius-docker-compose:$COMPOSE_COMMIT_SHA"

            echo "export COMPOSE_COMMIT_SHA=$COMPOSE_COMMIT_SHA" >> $BASH_ENV

            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            
            if docker buildx imagetools inspect $DOCKER_IMAGE >/dev/null 2>&1; then
              echo "Docker image $DOCKER_IMAGE already exists. Skipping build."
            else
              echo "Docker image $DOCKER_IMAGE not found. Building and pushing..."
              docker buildx create --use
              make build-push TAG=$COMPOSE_COMMIT_SHA
              make build-push TAG=latest
            fi
      - run:
          name: make
          command: |
            cd ~/audius-d
            make TAG=$COMPOSE_COMMIT_SHA
      - persist_to_workspace:
          root: ~/audius-d
          paths:
            - bin/audius-d-arm
            - bin/audius-d-x86

  test-devnet-deps:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - configure-path
      - standup-devnet
      - run: docker ps
      - run:
          name: acdc-ganache
          command: |
            timeout=0
            while [[ "$(curl -sf -w "%{http_code}" -o /dev/null -X POST --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' http://localhost:8545)" =~ 502|000 ]] && [ "$timeout" -lt 60 ]; do
              sleep 3
              ((timeout=timeout+3))
              echo "Waiting for server to start... $timeout"
            done
            if [ "$timeout" -ge 60 ]; then
              echo "Server didn't respond within 60 seconds. Exiting due to timeout."
              exit 1
            fi
      - run:
          name: mainnet-ganache
          command: |
            timeout=0
            while [[ "$(curl -sf -w "%{http_code}" -o /dev/null -X POST --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' http://localhost:8546)" =~ 502|000 ]] && [ "$timeout" -lt 60 ]; do
              sleep 3
              ((timeout=timeout+3))
              echo "Waiting for server to start... $timeout"
            done
            if [ "$timeout" -ge 60 ]; then
              echo "Server didn't respond within 60 seconds. Exiting due to timeout."
              exit 1
            fi
      - run:
          name: mainnet-solana
          command: |
            timeout=0
            while [[ "$(curl http://localhost:8899 -o /dev/null -X POST -H "Content-Type: application/json" -w "%{http_code}" -d '{"jsonrpc":"2.0","id":1,"method":"getFirstAvailableBlock"}')" =~ 502|000 ]] && [ "$timeout" -lt 60 ]; do
              sleep 3
              ((timeout=timeout+3))
              echo "Waiting for server to start... $timeout"
            done
            if [ "$timeout" -ge 60 ]; then
              echo "Server didn't respond within 60 seconds. Exiting due to timeout."
              exit 1
            fi
      - run:
          name: tear down devnet dependencies
          command: |
            cd ~/audius-d
            audius-d-x86 down

  test-audius-d-stage:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - configure-path
      - run:
          name: standup ci env against stage
          command: |
            cd ~/audius-d
            audius-d-x86 config create-context ci -f conf/templates/ci.toml 
            audius-d-x86
      - basic-health-check # creator node default
      - basic-health-check:
          port: 5000
          jqkey: '.data.discovery_provider_healthy'
      - basic-health-check:
          port: 7000
          jqkey: '.healthy'
      - run:
          name: teardown
          command: |
            audius-d-x86 down
      

  test-eth-registration:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - configure-path
      - standup-devnet
      - run:
          name: register delegateOwnerWallet
          command: |
            cd ~/audius-d
            audius-d-x86 config create-context ci -f conf/templates/ci.toml 
            audius-d-x86
            audius-d-x86 register

  test-config-subcommands:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - configure-path
      - run:
          name: test default context is created
          command: |
            audius-d-x86 config
      - run:
          name: test create context
          command: |
            audius-d-x86 config create-context test -f ~/audius-d/conf/templates/ci.toml 
      - run:
          name: test modify context
          command: |
            audius-d-x86 config set Network.EthMainnetPort 8765
      - run:
          name: ensure modifications are reflected
          command: |
            audius-d-x86 config | grep 'EthMainnetPort = 8765'
      - run:
          name: test invalid modify context
          command: |
            audius-d-x86 config set Network.EthMainnetPort 8asdf
      - run:
          name: ensure invalid modifications are not reflected
          command: |
            audius-d-x86 config | grep 'EthMainnetPort = 8765'
      - run:
          name: test delete context
          command: |
            audius-d-x86 config delete-context test
      - run:
          name: test resort to default context
          command: |
            audius-d-x86 config

  publish-job:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - checkout:
          path: ~/audius-d
      - gh/setup:
          version: 2.23.0
      - add_ssh_keys:
          fingerprints:
            - "7a:85:bb:bf:30:0e:99:c9:d5:ba:9e:a5:05:c8:cf:12"
      - run:
          name: git config
          command: |
            git config --global user.email "audius-infra@audius.co"
            git config --global user.name "audius-infra"
      - attach_workspace:
          at: ~/audius-d
      - run:
          name: commit go binaries
          command: |
            cd ~/audius-d
            git checkout -b bin origin/bin
            git add bin/*
            git commit -m "Update golang bin $CIRCLE_SHA1" || exit 0
            git push origin bin

workflows:
  version: 2
  build-test:
    jobs:
      - build-job:
          context: github
          filters:
            branches:
              ignore:
                - main
                - bin
      - test-audius-d-stage:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main
                - bin
      - test-devnet-deps:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main
                - bin
      - test-config-subcommands:
          context: github
          requires:
            - build-job
          filters:
            branches:
              ignore:
                - main
                - bin
      - test-eth-registration:
          context: github
          requires:
            - build-job
          filters:
            branches:
              only:
                - dummy-branch-disable-test  # temporarily disabled while we figure out host.docker.internal alternative

  build-test-publish:
    jobs:
      - build-job:
          context: github
          filters:
            branches:
              only:
                - main
      - test-audius-d-stage:
          context: github
          requires:
            - build-job
          filters:
            branches:
              only:
                - main
      - test-devnet-deps:
          context: github
          requires:
            - build-job
          filters:
            branches:
              only:
                - main
      - test-config-subcommands:
          context: github
          requires:
            - build-job
          filters:
            branches:
              only:
                - main
      - publish-job:
          context: github
          requires:
            - test-audius-d-stage
            - test-devnet-deps
          filters:
            branches:
              only:
                - main
