# Root CircleCI configuration
# Configuration for individual packages lives in .circleci/src/{commands,jobs,workflows}

version: 2.1

orbs:
  gh: circleci/github-cli@2.3.0

commands:
  setup-audius-ctl:
    description: Checkout and install audius-ctl built in previous job
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - run:
          name: Uninstall any existing audius-ctl binary
          command: |
            cd ~/audius-d
            make uninstall
      - run:
          name: Install audius-ctl
          command: |
            cd ~/audius-d
            make install
      - run:
          name: 'Install self-signed ssl certificate for devnet.audius-d'
          command: |
            cd ~/audius-d
            sudo cp deployments/tls/devnet-cert.pem /usr/local/share/ca-certificates/devnet.audius-d.crt
            sudo update-ca-certificates

jobs:
  build:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/workspace
      - checkout:
          path: ~/audius-d
      - gh/setup
      - run:
          name: install go
          command: |
            sudo apt-get update
            sudo apt-get install -y golang
      - run:
          name: Build audius-d docker image
          command: |
            cd ~/audius-d

            IMAGE_TAG="$(sha1sum ./Dockerfile | awk '{print $1}')"
            DOCKER_IMAGE="audius/audius-d:$IMAGE_TAG"

            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            
            if docker buildx imagetools inspect $DOCKER_IMAGE >/dev/null 2>&1; then
              echo "Docker image $DOCKER_IMAGE already exists. Skipping build."
            else
              echo "Docker image $DOCKER_IMAGE not found. Building and pushing..."
              docker buildx create --use
              make build-push-docker AD_TAG="$IMAGE_TAG"
            fi
      - run:
          name: Build audius-ctl for production
          command: |
            cd ~/audius-d
            make audius-ctl-production-build
      - persist_to_workspace:
          root: ~/audius-d
          paths:
            - bin/audius-ctl-arm64
            - bin/audius-ctl-x86_64

  test-audius-d-devnet:
    machine:
      image: ubuntu-2204:current
    resource_class: xlarge
    steps:
      - setup-audius-ctl
      - run:
          name: Add audius-d hosts
          command: |
            audius_hosts='127.0.0.1 creator-1.devnet.audius-d discovery-1.devnet.audius-d identity.devnet.audius-d eth-ganache.devnet.audius-d acdc-ganache.devnet.audius-d solana-test-validator.devnet.audius-d'
            grep -q "$audius_hosts" /etc/hosts || sudo tee -a /etc/hosts \<<<$audius_hosts
      - run:
          name: Stand up devnet
          command: |
            cd ~/audius-d
            IMAGE_TAG="$(sha1sum ./Dockerfile | awk '{print $1}')"
            audius-ctl config create-context devnet -f configs/templates/devnet.yaml
            # move private key to file
            audius-ctl config dump | grep 'privateKey:' | head -n1 | awk '{print $2}' > /tmp/private_key
            # replace private key value with file
            audius-ctl config dump | sed -E '0,/privateKey/{s#privateKey: [a-zA-Z0-9]+#privateKey: /tmp/private_key#}' | audius-ctl config create-context devnet -f - 

            audius-ctl devnet
            audius-ctl register
            audius-ctl up --await-healthy --audius-d-version $IMAGE_TAG
      - run:
          name: Test network status
          command: |
            cd ~/audius-d
            audius-ctl status
      - run:
          name: Teardown
          command: |
            cd ~/audius-d
            audius-ctl down -af

  test-config-subcommands:
    docker:
      - image: cimg/base:2023.01
    resource_class: small
    steps:
      - setup-audius-ctl
      - run:
          name: test default context is created
          command: |
            audius-ctl config
      - run:
          name: test create context
          command: |
            audius-ctl config create-context test -f ~/audius-d/configs/templates/devnet.yaml
      - run:
          name: test modify context
          command: |
            audius-ctl config | sed 's/devnet/testnet/g' | audius-ctl config create-context test-modified -f -
            audius-ctl config | grep 'deployOn: testnet'
      - run:
          name: test invalid modify context
          command: |
            if audius-ctl config | sed 's/httpPort: 7000/httpPort: asdf/g' | audius-ctl config create-context test-modified-2 -f -; then
              echo Should not have succeeded due to type error
              false
            fi
            audius-ctl config dump
            audius-ctl config dump | grep 'httpPort: 7000'
      - run:
          name: test dump context to file
          command: |
            tmpfile="$(mktemp)"
            audius-ctl config dump -o "$tmpfile"
            grep 'deployOn: testnet' "$tmpfile"
      - run:
          name: test delete context
          command: |
            audius-ctl config delete-context test-modified
            audius-ctl config  # should resort to default
            audius-ctl config current-context | grep 'default'
      - run:
          name: test fail to switch to nonexistent context
          command: |
            if audius-ctl config use-context idontexist; then
              echo Should not have succeeded switching to nonexistent context
              false
            fi
      - run:
          name: test version correctly formatted for production build
          command: |
            echo audius-ctl --version
            audius-ctl --version | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$'

  publish-audius-ctl:
    docker:
      - image: cimg/base:2023.01
    resource_class: small
    steps:
      - checkout:
          path: ~/audius-d
      - attach_workspace:
          at: ~/audius-d
      - gh/setup
      - run:
          name: Release audius-ctl
          command: |
            cd ~/audius-d
            make release-audius-ctl

  publish-audius-d:
    docker:
      - image: cimg/base:2023.01
    resource_class: small
    steps:
      - checkout:
          path: ~/audius-d
      - run:
          name: Release audius-d
          command: |
            # get crane
            VERSION=v0.17.0
            OS=Linux
            ARCH=x86_64
            curl -sL "https://github.com/google/go-containerregistry/releases/download/${VERSION}/go-containerregistry_${OS}_${ARCH}.tar.gz" > go-containerregistry.tar.gz
            tar -zxvf go-containerregistry.tar.gz -C $HOME/bin/ crane

            # set the 'default' tag to the newly vetted image
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            cd ~/audius-d
            IMAGE_TAG="$(sha1sum ./Dockerfile | awk '{print $1}')"
            crane copy "audius/audius-d:$IMAGE_TAG" "audius/audius-d:default"

workflows:
  audius-ctl-cicd:
    jobs:
      - build:
          context: github
      - test-audius-d-devnet:
          context: github
          requires:
            - build
      - test-config-subcommands:
          context: github
          requires:
            - build
      - publish-audius-ctl:
          context: github
          requires:
            - test-audius-d-devnet
            - test-config-subcommands
          filters:
            branches:
              only:
                - main
      - publish-audius-d:
          context: github
          requires:
            - publish-audius-ctl
          filters:
            branches:
              only:
                - main
